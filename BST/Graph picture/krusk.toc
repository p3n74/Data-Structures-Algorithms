\contentsline {chapter}{\numberline {1}Introduction to Trees and Graphs}{5}{}%
\contentsline {section}{\numberline {1.1}Introduction}{5}{}%
\contentsline {section}{\numberline {1.2}Trees}{5}{}%
\contentsline {subsection}{\numberline {1.2.1}Basic Terminology}{5}{}%
\contentsline {subsection}{\numberline {1.2.2}Counting Depth, Height, and Level}{6}{}%
\contentsline {subsection}{\numberline {1.2.3}Special Types of Trees}{6}{}%
\contentsline {section}{\numberline {1.3}Graphs}{6}{}%
\contentsline {subsection}{\numberline {1.3.1}Basic Terminology}{6}{}%
\contentsline {subsection}{\numberline {1.3.2}Graph Visualization}{7}{}%
\contentsline {subsubsection}{Vertex and Edge}{7}{}%
\contentsline {subsubsection}{Degree of a Vertex}{7}{}%
\contentsline {subsubsection}{Path and Cycle}{7}{}%
\contentsline {subsubsection}{Connected vs Disconnected Graph}{7}{}%
\contentsline {subsection}{\numberline {1.3.3}Types of Graphs}{7}{}%
\contentsline {subsection}{\numberline {1.3.4}Graph Traversal}{8}{}%
\contentsline {chapter}{\numberline {2}Graph Representations As Matrices}{9}{}%
\contentsline {section}{\numberline {2.1}Matrices of Graphs}{9}{}%
\contentsline {section}{\numberline {2.2}Adjacency Matrix}{9}{}%
\contentsline {subsection}{\numberline {2.2.1}Formal Definition}{9}{}%
\contentsline {subsection}{\numberline {2.2.2}Example: Undirected Graph}{9}{}%
\contentsline {subsection}{\numberline {2.2.3}Example: Directed Graph}{9}{}%
\contentsline {section}{\numberline {2.3}Incidence Matrix}{9}{}%
\contentsline {subsection}{\numberline {2.3.1}Formal Definition}{9}{}%
\contentsline {subsection}{\numberline {2.3.2}Example: Directed Graph}{10}{}%
\contentsline {section}{\numberline {2.4}Degree Matrix}{10}{}%
\contentsline {subsection}{\numberline {2.4.1}Formal Definition}{10}{}%
\contentsline {subsection}{\numberline {2.4.2}Example: Degree Matrix for Undirected Graph}{10}{}%
\contentsline {section}{\numberline {2.5}Adjacency Matrix Representation For Undirected Graph}{10}{}%
\contentsline {subsection}{\numberline {2.5.1}Code}{10}{}%
\contentsline {subsection}{\numberline {2.5.2}Graph Representation Example}{11}{}%
\contentsline {subsection}{\numberline {2.5.3}Execution Flow}{11}{}%
\contentsline {section}{\numberline {2.6}Adjacency Matrix for Directed Graph in C}{12}{}%
\contentsline {subsection}{\numberline {2.6.1}Graph Representation Example}{12}{}%
\contentsline {subsection}{\numberline {2.6.2}Execution Flow}{12}{}%
\contentsline {chapter}{\numberline {3}Graph Algorithms: Searching}{15}{}%
\contentsline {section}{\numberline {3.1}Breadth-First Search (BFS) with Queue Implementation}{15}{}%
\contentsline {subsection}{\numberline {3.1.1}Key Concepts}{15}{}%
\contentsline {subsection}{\numberline {3.1.2}Code Walkthrough}{15}{}%
\contentsline {subsubsection}{Adjacency Matrix Initialization}{15}{}%
\contentsline {subsubsection}{Inserting Edges}{15}{}%
\contentsline {subsubsection}{BFS Traversal}{15}{}%
\contentsline {subsubsection}{Queue Implementation}{16}{}%
\contentsline {subsubsection}{Matrix and Edge Display}{16}{}%
\contentsline {subsection}{\numberline {3.1.3}Example Output}{16}{}%
\contentsline {section}{\numberline {3.2}Depth-First Search (DFS) on a Graph Using an Adjacency Matrix}{16}{}%
\contentsline {subsection}{\numberline {3.2.1}Graph Representation and DFS Algorithm}{17}{}%
\contentsline {subsection}{\numberline {3.2.2}DFS Traversal}{18}{}%
\contentsline {subsection}{\numberline {3.2.3}Visualization of DFS Traversal}{18}{}%
\contentsline {chapter}{\numberline {4}Graph Algorithms: Finding The Shortest Paths}{19}{}%
\contentsline {section}{\numberline {4.1}Dijkstra's Algorithm: Deep Dive}{19}{}%
\contentsline {subsection}{\numberline {4.1.1}Graph Representation: Adjacency Matrix}{19}{}%
\contentsline {subsection}{\numberline {4.1.2}Key Variables and Data Structures}{19}{}%
\contentsline {subsection}{\numberline {4.1.3}Initialization: Setting Up the Graph}{19}{}%
\contentsline {subsection}{\numberline {4.1.4}Dijkstraâ€™s Algorithm Execution}{19}{}%
\contentsline {subsection}{\numberline {4.1.5}Displaying the Results}{20}{}%
\contentsline {subsection}{\numberline {4.1.6}Example Execution}{20}{}%
\contentsline {subsection}{\numberline {4.1.7}Code}{21}{}%
\contentsline {section}{\numberline {4.2}Floyd-Warshall Algorithm: Deep Dive}{24}{}%
\contentsline {subsection}{\numberline {4.2.1}Graph Representation: Adjacency Matrix}{24}{}%
\contentsline {subsection}{\numberline {4.2.2}Key Variables and Data Structures}{24}{}%
\contentsline {subsection}{\numberline {4.2.3}Floyd-Warshall Algorithm Implementation}{24}{}%
\contentsline {subsection}{\numberline {4.2.4}Displaying the Results}{24}{}%
\contentsline {subsection}{\numberline {4.2.5}Initialization and Insertion of Edges}{24}{}%
\contentsline {subsection}{\numberline {4.2.6}Example Execution}{24}{}%
\contentsline {section}{\numberline {4.3}Warshall's Algorithm: Deep Dive}{29}{}%
\contentsline {subsection}{\numberline {4.3.1}Graph Representation: Adjacency Matrix}{29}{}%
\contentsline {subsection}{\numberline {4.3.2}Key Variables and Data Structures}{29}{}%
\contentsline {subsection}{\numberline {4.3.3}Warshall's Algorithm Implementation}{29}{}%
\contentsline {subsection}{\numberline {4.3.4}Displaying the Results}{29}{}%
\contentsline {subsection}{\numberline {4.3.5}Initialization and Insertion of Edges}{29}{}%
\contentsline {subsection}{\numberline {4.3.6}Example Execution}{29}{}%
\contentsline {chapter}{\numberline {5}Graph Algorithms: Minimum Cost Spanning Trees}{33}{}%
\contentsline {section}{\numberline {5.1}Kruskal's Algorithm for Minimum Spanning Tree (MST)}{33}{}%
\contentsline {subsection}{\numberline {5.1.1}Data Structure Definitions}{33}{}%
\contentsline {subsection}{\numberline {5.1.2}Code}{33}{}%
\contentsline {subsection}{\numberline {5.1.3}Step 1: Initialize the Kruskal's MST Structure}{34}{}%
\contentsline {subsection}{\numberline {5.1.4}Step 2: Initialize the Components Array}{34}{}%
\contentsline {subsection}{\numberline {5.1.5}Step 3: Process Edges from the Min-Heap}{34}{}%
\contentsline {subsection}{\numberline {5.1.6}Step 4: Check for Cycles (Disjoint Set Union)}{34}{}%
\contentsline {subsection}{\numberline {5.1.7}Step 5: Merge the Components}{34}{}%
\contentsline {subsection}{\numberline {5.1.8}Step 6: Add the Edge to the MST}{35}{}%
\contentsline {section}{\numberline {5.2}Kruskal's Algorithm: Before and After}{35}{}%
\contentsline {subsection}{\numberline {5.2.1}Before Kruskal's Algorithm}{35}{}%
\contentsline {subsection}{\numberline {5.2.2}After Kruskal's Algorithm}{35}{}%
\contentsline {subsection}{\numberline {5.2.3}Summary}{36}{}%
\contentsline {section}{\numberline {5.3}Flight Network Optimization}{37}{}%
\contentsline {subsection}{\numberline {5.3.1}Data Structures Used}{37}{}%
\contentsline {subsection}{\numberline {5.3.2}Function Descriptions}{37}{}%
\contentsline {subsection}{\numberline {5.3.3}Step-by-Step Breakdown of Kruskal's Algorithm}{37}{}%
\contentsline {subsection}{\numberline {5.3.4}Example Run}{37}{}%
\contentsline {subsection}{\numberline {5.3.5}Edge Case: Disconnected Graph}{38}{}%
\contentsline {section}{\numberline {5.4}Prim's Algorithm\\(non-POT implementation)}{39}{}%
\contentsline {subsection}{\numberline {5.4.1}Data Structure Definitions}{39}{}%
\contentsline {subsection}{\numberline {5.4.2}Code}{39}{}%
\contentsline {subsection}{\numberline {5.4.3}Step 1: Initialize the Prim's MST Structure}{40}{}%
\contentsline {subsection}{\numberline {5.4.4}Step 2: Initialize the Visited Set}{40}{}%
\contentsline {subsection}{\numberline {5.4.5}Step 3: Process Edges to Find the Minimum Edge}{40}{}%
\contentsline {subsection}{\numberline {5.4.6}Step 4: Check Each Edge for Minimum Weight}{40}{}%
\contentsline {subsection}{\numberline {5.4.7}Step 5: Add the Minimum Edge to the MST}{40}{}%
\contentsline {subsection}{\numberline {5.4.8}Step 6: Mark the Vertex as Visited and Add Edge to MST}{41}{}%
\contentsline {subsection}{\numberline {5.4.9}Step 7: Return the Minimum Spanning Tree}{41}{}%
\contentsline {section}{\numberline {5.5}Graph and MST}{41}{}%
\contentsline {subsection}{\numberline {5.5.1}Original Graph Matrix}{41}{}%
\contentsline {subsection}{\numberline {5.5.2}Minimum Spanning Tree (MST)}{41}{}%
\contentsline {subsection}{\numberline {5.5.3}Summary}{42}{}%
